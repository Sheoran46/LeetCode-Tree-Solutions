/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> list=new ArrayList<>();
        if(root==null)
        return list;
        Queue<TreeNode> queue=new LinkedList<>();
        queue.add(root);
        queue.add(null);
        TreeNode temp=null;
        while(!queue.isEmpty()){
            TreeNode bhai=queue.poll();
            if(bhai==null){
                list.add(temp.val);
                if(queue.isEmpty())
                break;
                else
                queue.add(null);
            }else{
                temp=bhai;
                if(bhai.left!=null) queue.add(bhai.left);
                if(bhai.right!=null) queue.add(bhai.right);
            }
        }
        return list;
    }
}

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int maxLevelSum(TreeNode root) {
        int level=0;
        Queue<TreeNode> queue=new LinkedList<>();
        queue.add(root);
        queue.add(null);
        int maxsum=Integer.MIN_VALUE;
        int currsum=0,currlevel=0;
        while(!queue.isEmpty()){
            TreeNode node=queue.poll();
            if(node==null){
                currlevel+=1;
                if(maxsum<currsum){
                    maxsum=currsum;
                    level=currlevel;
                }
                if(queue.isEmpty()){
                    break;
                }else{
                    currsum=0;
                    queue.add(null);
                }
            }else{
                currsum+=node.val;
                if(node.left!=null){
                    queue.add(node.left);
                }
                if(node.right!=null){
                    queue.add(node.right);
                }
            }
        }
        return level;
    }
}

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public void btabhai(TreeNode root,int targetsum,List<Integer> list,List<List<Integer>> bdilist){
        if(root==null)
        return;
        list.add(root.val);
        if(root.left==null && root.right==null && root.val==targetsum){
            bdilist.add(new ArrayList<>(list));
        }
        btabhai(root.left,targetsum-root.val,new ArrayList<>(list),bdilist);
        btabhai(root.right,targetsum-root.val,new ArrayList<>(list),bdilist);
        list.remove(list.size()-1);
    }
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> list=new ArrayList<>();
        if(root==null)
        return list;
        List<Integer> chotti=new ArrayList<>();
        btabhai(root,targetSum,chotti,list);
        return list;
    }
}
